<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.3.xsd
		http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop-4.3.xsd
		http://www.springframework.org/schema/tx http://www.springframework.org/schema/tx/spring-tx-4.3.xsd">
	
	<context:component-scan base-package="com.wz">
            	<context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
    </context:component-scan>
			<!-- spring的配置文件，与业务逻辑有关 -->
            <!-- 数据源 ========= 日志=========缓存等 -->
          	<!-- 数据源配置 -->
	<context:property-placeholder location="classpath:jdbc.properties"/>
	<bean id="pooledDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
            	<property name="jdbcUrl" value="${jdbc.jdbcUrl}"/>
		        <property name="driverClass" value="${jdbc.driverClass}"/>
		        <property name="user" value="${jdbc.user}"/>
		        <property name="password" value="${jdbc.password}"/>
    </bean>
    
    <!-- 配置一个可以执行批量的sqlSession -->
     <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
     	<constructor-arg name="sqlSessionFactory" ref="sqlSessionFactory"></constructor-arg>
     	<constructor-arg name="executorType" value="BATCH"></constructor-arg>
     </bean>
    
    <!-- 配置和mybatis的整合====================== ====================-->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
    	<!-- mybatis的全局配置文件 -->
    	<property name="dataSource" ref="pooledDataSource" />
    	<property name="configLocation" value="classpath:applicationContext-mybatis.xml" />
    	<!-- 指定mybatis扫描的mapper文件的位置 -->
    	<property name="mapperLocations" value="classpath:mapper/*.xml"></property>
    </bean>
	
	<!-- 配置扫描器，将mybatis的实现加入到ioc容器中 -->
   	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
      		<!-- 扫描所有dao接口的实现，加入到ioc容器中 -->
		<property name="basePackage" value="com.wz.crud.dao" />
	</bean>
	
	<!-- ========================================================事务控制配置 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<!-- 控制数据源 -->
		<property name="dataSource" ref="pooledDataSource"></property>
	</bean>
	<!-- 开启基于注解的事务控制    使用xml配置形式的事物控制（主要使用的都是配置式） -->
	<aop:config>
		<!-- 切入点表达式 -->
		<aop:pointcut expression="execution(* com.wz.crud.service..*(..))" id="txPoint"/>
		<!-- 配置事物增强 -->
		<aop:advisor advice-ref="txAdvice" pointcut-ref="txPoint"/>
	</aop:config>
	
	<!-- 配置事物增强  事物如何切入 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
		<tx:attributes>
			<!-- 所有方法都是事物方法-->
			<tx:method name="*"/>
			<!-- 所有以get开头的方法 -->
			<tx:method name="get*" read-only="true"/>
		</tx:attributes>
	</tx:advice>
</beans>
